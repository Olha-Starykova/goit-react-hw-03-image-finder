{"version":3,"sources":["components/Searchbar/Searchbar.js","services/api.js","components/ImageGallery/default.jpg","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Button/Button.js","components/Loader/Loader.js","App.js","index.js"],"names":["Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","onChange","autocomplete","autofocus","placeholder","Component","fetchHits","searchQuery","currentPage","pageSize","axios","get","then","response","data","hits","propTypes","PropTypes","string","isRequired","number","ImageGalleryItem","webformatURL","showModal","largeImageURL","onClick","src","alt","defaultProps","defaultImage","ImageGallery","map","id","modalRoot","document","querySelector","Modal","handleKeyDown","code","console","log","onClose","handleBackdropClick","event","window","addEventListener","removeEventListener","createPortal","stopPropagation","Button","App","style","textAlign","display","text-align","color","height","width","timeout","React","isLoading","error","onChangeQuery","options","api","prevState","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","prevProps","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.177dd320.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Searchbar.css'\r\n \r\n\r\nclass Searchbar extends Component{\r\n    state = {\r\n        query: ''\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            query: e.currentTarget.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        // console.log(this.state)\r\n        this.props.onSubmit(this.state.query)\r\n        this.setState({ query: '' })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        value={this.state.query}\r\n                        onChange={ this.handleChange}\r\n                        autocomplete=\"off\"\r\n                        autofocus\r\n                        placeholder=\"Search images and photos\"\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    };\r\n};\r\nSearchbar.propTypes = {\r\n     onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n\r\n","import axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n \r\n\r\nconst fetchHits = ({ searchQuery = '', currentPage = 1, pageSize = 12 }) => {\r\n    return axios\r\n        .get(`https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=20314649-0be4b13706b99da5b0e7a5a44&image_type=photo&orientation=horizontal&per_page=${pageSize}`,)\r\n        .then(response =>\r\n            response.data.hits);\r\n  \r\n};\r\n\r\n\r\nfetchHits.propTypes = {\r\n    searchQuery: PropTypes.string.isRequired,\r\n    currentPage: PropTypes.number,\r\n    pageSize: PropTypes.number\r\n};\r\n\r\n\r\nexport default { fetchHits };","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ImageGalleryItem.css'\r\n import defaultImage from '../ImageGallery/default.jpg'\r\n\r\nconst ImageGalleryItem = ({ webformatURL, showModal, largeImageURL }) => {\r\n    \r\n    return (\r\n\r\n        <li onClick={() => showModal(largeImageURL)} className=\"ImageGalleryItem\">\r\n            <img src={webformatURL} alt={webformatURL} className=\"ImageGalleryItem-image\" />\r\n        </li>\r\n\r\n    );\r\n}\r\n\r\n\r\nImageGalleryItem.defaultProps = {\r\n    webformatURL: defaultImage,\r\n    largeImageURL: defaultImage,\r\n\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n    showModal: PropTypes.func.isRequired,\r\n    webformatURL: PropTypes.string,\r\n    largeImageURL: PropTypes.string\r\n};\r\n\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ImageGallery.css'\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\r\nimport defaultImage from './default.jpg'\r\n\r\n\r\nconst ImageGallery = ({ hits, showModal }) => {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {hits.map(({ id, webformatURL, largeImageURL }) => (\r\n                \r\n                <ImageGalleryItem key={id} webformatURL={webformatURL} largeImageURL={largeImageURL} showModal={showModal }/>)\r\n               \r\n            )\r\n            }\r\n        </ul>\r\n      \r\n    );\r\n};\r\n\r\n\r\n\r\nImageGallery.defaultProps = {\r\n    webformatURL: defaultImage,\r\n    largeImageURL: defaultImage,\r\n\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  showModal: PropTypes.func.isRequired,\r\n  hits: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string,\r\n      largeImageURL: PropTypes.string,\r\n  })),\r\n}\r\n\r\n\r\n\r\n export default ImageGallery;\r\n\r\n\r\n        \r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport defaultImage from '../ImageGallery/default.jpg'\r\n//метод создать портал из реакт дома\r\n import { createPortal } from 'react-dom';\r\nimport './Modal.css';\r\n\r\n const modalRoot = document.querySelector('#modal-root');\r\n//закрытие по ескейп\r\n\r\nexport default class Modal extends Component {\r\n    //при монтировании\r\n  componentDidMount() {\r\n    //console.log('Modal componentDidMount');\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n//при размантировании чистим\r\n  componentWillUnmount() {\r\n   // console.log('Modal componentWillUnmount');\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      console.log('Нажали ESC, нужно закрыть модалку');\r\n//вызвали пропс\r\n      this.props.onClose();\r\n\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    \r\n    this.props.onClose();\r\n    \r\n  };\r\n\r\n    render() {\r\n      const { largeImageURL } = this.props;\r\n      return createPortal(\r\n        \r\n        <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n         \r\n          <div className=\"Modal\" onClick={e => { e.stopPropagation() }}>\r\n            <img src={largeImageURL} alt={largeImageURL} />\r\n          </div>\r\n                          \r\n        </div>, modalRoot,\r\n     \r\n      );\r\n  }\r\n}\r\n\r\nModal.defaultProps = {\r\n      largeImageURL: defaultImage,\r\n\r\n};\r\n\r\n\r\nModal.propTypes = {\r\n  largeImage: PropTypes.string,\r\n};\r\n  \r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n import  './Button.css';\r\n\r\nconst Button = ({ fetchHits }) => {\r\n  const clickfetchHits = () => {\r\n   fetchHits();\r\n  };\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={clickfetchHits}>\r\n      Load more\r\n    </button>\r\n    \r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  fetchHits: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nexport default class App extends React.Component {\r\n\r\n  render() {\r\n      return (\r\n          <div style={{textAlign: \"center\", display: \"block\" }}>\r\n              <Loader\r\n                  text-align=\"center\"\r\n                  display=\"block\"\r\n                  type=\"Puff\"\r\n                  color=\"#00BFFF\"\r\n                  height={40}\r\n                  width={40}\r\n                  timeout={3000} //3 secs\r\n              />\r\n          </div>\r\n      ); \r\n  }\r\n}\r\n;\r\n\r\n","import React, { Component } from 'react';\n import Searchbar from './components/Searchbar/Searchbar'\nimport api from './services/api'\nimport ImageGallery from './components/ImageGallery/ImageGallery'\nimport Modal from './components/Modal/Modal'\nimport Button from './components/Button/Button';\nimport Loader from './components/Loader/Loader'\n\n\nclass App extends Component {\n  state = {\n    hits: [],\n    currentPage: 1,\n    searchQuery: '',\n    isLoading: false,\n    error: null,\n    showModal: false,\n    largeImageURL: ''\n  };\n \n\n    componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchHits()\n      };\n  };\n \n  //данные с сабмита\n  onChangeQuery = query => {\n    // console.log(query)\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      hits: [],\n      error: null,\n    });\n  };\n\n\n\n  fetchHits = () => {\n    const { currentPage, searchQuery } = this.state;\n\n    const options = {\n      searchQuery,\n      currentPage\n    };\n\n    this.setState({ isLoading: true });\n \n    api\n      .fetchHits(options)\n      .then(hits => {\n        this.setState(prevState => ({\n          hits: [...prevState.hits, ...hits],\n          currentPage: prevState.currentPage + 1,\n        }))\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => (this.setState({ isLoading: false }),\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        }))\n      )\n  };\n  \n  \n  toggleModal = (largeImageURL) => {\n    //console.log(largeImageURL)\n    this.setState(state => ({\n      showModal: !state.showModal,\n      largeImageURL\n    }));\n  };\n\n\n  render() {\n    const { hits, isLoading, error, showModal, largeImageURL  } = this.state\n     \n    return (\n      <div>\n        {error && <h1>Попробуте перезагрузить страницу</h1>}\n\n        <Searchbar onSubmit={this.onChangeQuery} />\n\n        {isLoading && <h1>Загружаем...</h1>}\n\n        <ImageGallery showModal={this.toggleModal} hits={hits} />\n\n\n        {showModal && <Modal onClose={this.toggleModal} largeImageURL={largeImageURL} />}\n          \n     \n        {(hits.length > 0) && !isLoading && <Button fetchHits={this.fetchHits} />}\n\n\n\n        {isLoading && <Loader />}\n\n              \n      </div>\n    );\n  };\n};\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}