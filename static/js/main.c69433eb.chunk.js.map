{"version":3,"sources":["components/Searchbar/Searchbar.js","services/api.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","onChange","autocomplete","autofocus","placeholder","Component","searchQuery","currentPage","pageSize","axios","get","then","response","data","hits","ImageGalleryItem","webformatURL","showModal","largeImageURL","onClick","src","alt","ImageGallery","map","id","modalRoot","document","querySelector","Modal","handleKeyDown","code","console","log","onClose","handleBackdropClick","event","window","addEventListener","removeEventListener","createPortal","stopPropagation","App","isLoading","error","onChangeQuery","fetchHits","options","api","prevState","catch","finally","toggleModal","prevProps","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c69433eb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport './Searchbar.css'\r\n \r\n\r\nclass Searchbar extends Component{\r\n    state = {\r\n        query: ''\r\n\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            query: e.currentTarget.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = e => { \r\n        e.preventDefault()\r\n        // console.log(this.state)\r\n        this.props.onSubmit(this.state.query)\r\n        this.setState({query: ''})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        value={this.state.query}\r\n                        onChange={ this.handleChange}\r\n                        autocomplete=\"off\"\r\n                        autofocus\r\n                        placeholder=\"Search images and photos\"\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Searchbar;\r\n\r\n","import axios from 'axios';\r\n \r\n\r\nconst fetchHits = ({ searchQuery = '', currentPage = 1, pageSize = 12 }) => {\r\n    return axios\r\n        .get(`https:pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=20314649-0be4b13706b99da5b0e7a5a44&image_type=photo&orientation=horizontal&per_page=${pageSize}`,)\r\n        .then(response =>\r\n            response.data.hits);\r\n  \r\n};\r\n\r\nexport default { fetchHits };","import React from 'react';\r\n import './ImageGalleryItem.css'\r\n\r\nconst ImageGalleryItem = ({ webformatURL, showModal, largeImageURL }) => {\r\n    \r\n    return (\r\n\r\n        <li onClick={() => showModal(largeImageURL)} className=\"ImageGalleryItem\">\r\n            <img src={webformatURL} alt={webformatURL} className=\"ImageGalleryItem-image\" />\r\n        </li>\r\n\r\n    )\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport './ImageGallery.css'\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\r\n\r\n\r\n\r\nconst ImageGallery = ({ hits, showModal }) => {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {hits.map(({ id, webformatURL, largeImageURL }) => (\r\n                \r\n                <ImageGalleryItem key={id} webformatURL={webformatURL} largeImageURL={largeImageURL} showModal={showModal }/>)\r\n               \r\n            )\r\n            }\r\n        </ul>\r\n      \r\n    );\r\n}; \r\n export default ImageGallery;\r\n\r\n\r\n        \r\n\r\n\r\n","import React, { Component } from 'react';\r\n//метод создать портал из реакт дома\r\n import { createPortal } from 'react-dom';\r\nimport './Modal.css';\r\n\r\n const modalRoot = document.querySelector('#modal-root');\r\n//закрытие по ескейп\r\n\r\nexport default class Modal extends Component {\r\n    //при монтировании\r\n  componentDidMount() {\r\n    //console.log('Modal componentDidMount');\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n//при размантировании чистим\r\n  componentWillUnmount() {\r\n   // console.log('Modal componentWillUnmount');\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      console.log('Нажали ESC, нужно закрыть модалку');\r\n//вызвали пропс\r\n      this.props.onClose();\r\n\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    \r\n    this.props.onClose();\r\n    \r\n  };\r\n\r\n    render() {\r\n      const { largeImageURL } = this.props;\r\n      return createPortal(\r\n        \r\n        <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n         \r\n          <div className=\"Modal\" onClick={e => { e.stopPropagation() }}>\r\n            <img src={largeImageURL} alt={largeImageURL} />\r\n          </div>\r\n                          \r\n        </div>, modalRoot,\r\n     \r\n      );\r\n  }\r\n}\r\n  \r\n","import React, { Component } from 'react';\n import Searchbar from './components/Searchbar/Searchbar'\nimport api from './services/api'\nimport ImageGallery from './components/ImageGallery/ImageGallery'\nimport Modal from './components/Modal/Modal'\n\n\nclass App extends Component {\n  state = {\n    hits: [],\n    currentPage: 1,\n    searchQuery: '',\n    isLoading: false,\n    error: null,\n    showModal: false,\n    //  webformatURL: ''\n    largeImageURL: ''\n  \n\n  };\n \n\n    componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchHits()\n    }\n  }\n \n  //данные с сабмита\n  onChangeQuery = query => {\n    // console.log(query)\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      hits: [],\n      error: null,\n    \n    })\n  };\n\n\n\n  fetchHits = () => {\n    const { currentPage, searchQuery} = this.state;\n\n    const options = {\n      searchQuery,\n      currentPage\n    };\n\n    this.setState({ isLoading: true });\n \n    api\n      .fetchHits(options)\n      .then(hits => {\n        this.setState(prevState => ({\n          hits: [...prevState.hits, ...hits],\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false}));\n  };\n// webformatURL: true\n  \n  \n  toggleModal = (largeImageURL) => {\n     \n     \n     //console.log(largeImageURL)\n    this.setState(state => ({\n      showModal: !state.showModal,\n      largeImageURL\n      // webformatURL: !state.webformatURL\n    }));\n  }\n\n// webformatURL - ссылка на маленькое изображение для списка карточек\n// largeImageURL - ссылка на большое изображение для модального окна\n\n  render() {\n    const { hits, isLoading, error, showModal, largeImageURL  } = this.state\n  // console.log(showModal)\n    \n    return (\n      <div>\n        {error && <h1>Попробуте перезагрузить страницу</h1>}\n\n        <Searchbar onSubmit={this.onChangeQuery} />\n\n        {isLoading && <h1>Загружаем...</h1>}\n\n        <ImageGallery showModal={this.toggleModal} hits={hits} />\n\n\n        {showModal && <Modal onClose={this.toggleModal} largeImageURL={largeImageURL} />}\n          \n     \n        {(hits.length > 0) && !isLoading && (<button type='button' onClick={this.fetchHits}>Загрузить еще</button>)}\n\n\n      </div>\n    );\n  };\n};\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}