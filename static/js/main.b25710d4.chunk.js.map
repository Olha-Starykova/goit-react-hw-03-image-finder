{"version":3,"sources":["components/Searchbar/Searchbar.js","App.js","index.js"],"names":["Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","onChange","autocomplete","autofocus","placeholder","Component","App","hits","currentPage","searchQuery","onChangeQuery","fetchHits","axios","get","then","response","console","log","data","prevState","map","id","webformatURL","src","alt","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOA6CeA,E,4MAzCXC,MAAQ,CACJC,MAAO,I,EAIXC,aAAe,SAAAC,GACX,EAAKC,SAAS,CACVH,MAAOE,EAAEE,cAAcC,S,EAI/BC,aAAe,SAAAJ,GACXA,EAAEK,iBAEF,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,OAC/B,EAAKG,SAAS,CAACH,MAAO,M,4CAG1B,WACI,OACI,wBAAQU,UAAU,YAAlB,SACI,uBAAMA,UAAU,aAAaD,SAAUE,KAAKL,aAA5C,UACI,wBAAQM,KAAK,SAASF,UAAU,oBAAhC,SACI,sBAAMA,UAAU,0BAAhB,sBAGJ,uBACIA,UAAU,mBACVE,KAAK,OACLP,MAAOM,KAAKZ,MAAMC,MAClBa,SAAWF,KAAKV,aAChBa,aAAa,MACbC,WAAS,EACTC,YAAY,sC,GAlCZC,a,iBCyDTC,E,4MAtDbnB,MAAQ,CACNoB,KAAM,GACNC,YAAa,EACbC,YAAa,I,EASfC,cAAgB,SAAAtB,GAEf,EAAKuB,UAAUvB,GACf,EAAKG,SAAS,CAACkB,YAAarB,K,EAG7BuB,UAAY,SAACvB,GAAW,IACfoB,EAAa,EAAKrB,MAAlBqB,YACLI,IAAMC,IAAN,mCAAsCzB,EAAtC,4GAA+IoB,IAC9IM,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAASG,KAAKX,MAC1B,EAAKhB,UAAS,SAAA4B,GAAS,MAAI,CACzBZ,KAAMQ,EAASG,KAAKX,KACpBC,YAAaW,EAAUX,YAAc,U,uDAnB7C,c,oBA2BA,WAAU,IACDD,EAAQR,KAAKZ,MAAboB,KACP,OACE,gCAEE,cAAC,EAAD,CAAWV,SAAUE,KAAKW,gBAC1B,6BACGH,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAP,OACR,6BAEE,qBAAKC,IAAKD,EAAcE,IAAKF,KAFtBD,QAMnB,wBAAQrB,KAAK,SAASyB,QAAS1B,KAAKY,UAApC,8F,GAhDgBN,aCAlBqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b25710d4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n \r\n\r\nclass Searchbar extends Component{\r\n    state = {\r\n        query: ''\r\n\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            query: e.currentTarget.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        // console.log(this.state)\r\n        this.props.onSubmit(this.state.query)\r\n        this.setState({query: ''})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        value={this.state.query}\r\n                        onChange={ this.handleChange}\r\n                        autocomplete=\"off\"\r\n                        autofocus\r\n                        placeholder=\"Search images and photos\"\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Searchbar;\r\n\r\n","import React, { Component } from 'react';\n import Searchbar from './components/Searchbar/Searchbar'\n import axios from 'axios';\n\n\nclass App extends Component {\n  state = {\n    hits: [],\n    currentPage: 1,\n    searchQuery: '',\n  };\n  //получаем данные\n  componentDidMount() {\n    \n}\n\n \n  //данные с сабмита\n  onChangeQuery = query => {\n    // console.log(query)\n   this.fetchHits(query)\n   this.setState({searchQuery: query})\n  };\n\n  fetchHits = (query) => {\n     const{currentPage}=this.state\n      axios.get(`https:pixabay.com/api/?q=${query}&per_page=12&&key=20314649-0be4b13706b99da5b0e7a5a44&image_type=photo&orientation=horizontalpage=${currentPage}`)\n      .then(response => {\n        console.log(response.data.hits);\n        this.setState(prevState=> ({\n          hits: response.data.hits,\n          currentPage: prevState.currentPage + 1,\n        }));\n      });\n  }\n\n// webformatURL - ссылка на маленькое изображение для списка карточек\n// largeImageURL - ссылка на большое изображение для модального окна\n\n  render() {\n    const {hits} = this.state\n    return (\n      <div>\n   \n        <Searchbar onSubmit={this.onChangeQuery} />\n        <ul>\n          {hits.map(({ id, webformatURL }) =>\n            <li key={id}>\n            \n              <img src={webformatURL} alt={webformatURL} />\n              \n            </li>)}\n        </ul>\n  <button type='button' onClick={this.fetchHits}>Загрузить еще</button>\n\n      </div>\n    );\n    }\n};\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}